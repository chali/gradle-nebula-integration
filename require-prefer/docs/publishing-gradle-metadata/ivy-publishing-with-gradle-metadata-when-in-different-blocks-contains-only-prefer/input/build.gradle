
plugins {
    id 'java-library'
    id 'ivy-publish'
}

allprojects {
    configurations { implementation }
}

group = 'tree'
version = '1.0'

// TODO - use public APIs when available
class TestComponent implements org.gradle.api.internal.component.SoftwareComponentInternal, ComponentWithVariants {
    String name
    Set usages = []
    Set variants = []
}

class TestUsage implements org.gradle.api.internal.component.UsageContext {
    String name
    Usage usage
    Set dependencies = []
    Set dependencyConstraints = []
    Set artifacts = []
    Set capabilities = []
    Set globalExcludes = []
    AttributeContainer attributes
}

class TestVariant implements org.gradle.api.internal.component.SoftwareComponentInternal {
    String name
    Set usages = []
}

class TestCapability implements Capability {
    String group
    String name
    String version
}

def comp = new TestComponent()
comp.usages.add(new TestUsage(
                    name: 'api',
                    usage: objects.named(Usage, 'api'),
                    dependencies: configurations.implementation.allDependencies,
                    attributes: configurations.implementation.attributes))


dependencies {
    api ("tree:acacia") {
        version {
            prefer '1.5'
        }
    }
    
}

repositories {
    maven { url { '../../../../repo/maven-repo' } }
}

publishing {
    repositories {
        ivy { url { 'ivy-repo' } }
    }
    publications {
        ivy(IvyPublication) {
            from comp
        }
    }
}
