plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "maven-publish"
	id "ivy-publish"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}



publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'com.example'
			artifactId = 'demo'
			version = '0.0.1-SNAPSHOT'
			from components.java

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
		ivy(IvyPublication) {
			organisation = 'com.example'
			module = 'demo'
			revision = '0.0.1-SNAPSHOT'
			descriptor.status = 'milestone'
			descriptor.branch = 'testing'
			descriptor.extraInfo 'http://my.namespace', 'myElement', 'Some value'
			repositories {
				ivy {
					// change to point to your repo, e.g. http://my.org/repo
					url = "$buildDir/ivyrepo"
				}
			}
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}
