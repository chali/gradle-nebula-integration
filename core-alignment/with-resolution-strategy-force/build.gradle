import org.gradle.api.internal.artifacts.ivyservice.ivyresolve.strategy.*

def VERSIONED_COMPARATOR = new DefaultVersionComparator()
def VERSION_COMPARATOR = VERSIONED_COMPARATOR.asVersionComparator()
def VERSION_SCHEME = new DefaultVersionSelectorScheme(VERSIONED_COMPARATOR)

apply plugin: "java"

repositories {
    maven {
        url 'repo'
    }
}

configurations.all {
    resolutionStrategy.dependencySubstitution.all {
        def selector = VERSION_SCHEME.parseSelector("1.2.0")
        if (it.requested.group.startsWith("test.nebula") && selector.accept(it.requested.version)) {
            it.useTarget("${it.requested.group}:${it.requested.module}:1.3.0")
        }
    }
}

project.dependencies.components.all(AlignGroup.class)

class AlignGroup implements ComponentMetadataRule {
    void execute(ComponentMetadataContext ctx) {
        ctx.details.with { it ->
            if (it.getId().getGroup().startsWith("test.nebula")) {
                it.belongsTo("test.nebula:test.nebula:${it.getId().getVersion()}")
            }
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'test.nebula:a:1.2.0' // force to bad version triggers a substitution
    }
}

dependencies {
    implementation 'test.nebula:a:1.2.0' // bad version
    implementation 'test.nebula:b:1.0.0' // added for alignment
    implementation 'test.nebula:c:1.0.0' // added for alignment
}
